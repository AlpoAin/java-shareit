-- users
CREATE TABLE IF NOT EXISTS users (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  email VARCHAR(512) NOT NULL,
  CONSTRAINT uq_users_email UNIQUE (email)
);

-- items
CREATE TABLE IF NOT EXISTS items (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  name VARCHAR(255) NOT NULL,
  description VARCHAR(1000),
  is_available BOOLEAN NOT NULL,
  owner_id BIGINT NOT NULL,
  request_id BIGINT,
  CONSTRAINT fk_items_owner FOREIGN KEY (owner_id) REFERENCES users (id)
);

-- requests (на будущее спринта)
CREATE TABLE IF NOT EXISTS requests (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  description VARCHAR(1000) NOT NULL,
  requestor_id BIGINT NOT NULL,
  CONSTRAINT fk_requests_requestor FOREIGN KEY (requestor_id) REFERENCES users (id)
);

-- bookings
CREATE TABLE IF NOT EXISTS bookings (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  start_date TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  end_date   TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  item_id BIGINT NOT NULL,
  booker_id BIGINT NOT NULL,
  status VARCHAR(20) NOT NULL,
  CONSTRAINT fk_bookings_item   FOREIGN KEY (item_id)   REFERENCES items (id),
  CONSTRAINT fk_bookings_booker FOREIGN KEY (booker_id) REFERENCES users (id)
);

-- comments
CREATE TABLE IF NOT EXISTS comments (
  id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
  text VARCHAR(2000) NOT NULL,
  item_id BIGINT NOT NULL,
  author_id BIGINT NOT NULL,
  created TIMESTAMP WITHOUT TIME ZONE NOT NULL,
  CONSTRAINT fk_comments_item   FOREIGN KEY (item_id)   REFERENCES items (id),
  CONSTRAINT fk_comments_author FOREIGN KEY (author_id) REFERENCES users (id)
);

-- helpful indexes
CREATE INDEX IF NOT EXISTS idx_items_owner        ON items(owner_id);
CREATE INDEX IF NOT EXISTS idx_bookings_item      ON bookings(item_id);
CREATE INDEX IF NOT EXISTS idx_bookings_booker    ON bookings(booker_id);
CREATE INDEX IF NOT EXISTS idx_comments_item      ON comments(item_id);
